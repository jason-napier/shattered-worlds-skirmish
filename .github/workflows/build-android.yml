name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-{bad,base,good,ugly} gstreamer1.0-{tools,x} libgirepository1.0-dev libcairo2-dev pkg-config python3-dev
        sudo apt-get install -y openjdk-8-jdk
        sudo apt-get install -y libssl-dev libffi-dev python3-setuptools python3-wheel
        sudo apt-get install -y cmake
        
    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        
    - name: Install buildozer and dependencies
      run: |
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install kivy==2.2.1
        pip install pillow==10.0.0
        
    - name: Show buildozer version
      run: |
        buildozer --version
        
    - name: Initialize buildozer (if needed)
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
    - name: Show current directory contents
      run: |
        ls -la
        echo ""
        echo "Checking Python imports..."
        python3 -c "import kivy; print('Kivy version:', kivy.__version__)"
        python3 -c "import PIL; print('Pillow version:', PIL.__version__)"
        python3 -c "import cython; print('Cython version:', cython.__version__)"
        echo ""
        echo "Testing main.py import..."
        python3 -c "import main; print('Main.py imports successfully')"
        
    - name: Build APK
      run: |
        echo "Starting buildozer build..."
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Buildozer spec file contents:"
        cat buildozer.spec | head -20
        echo ""
        echo "Starting build..."
        buildozer android debug 2>&1 | tee build.log
      continue-on-error: true
        
    - name: Check if APK was created
      run: |
        echo "Current directory contents:"
        ls -la
        echo ""
        if [ -d bin ]; then
          echo "APK files found:"
          ls -la bin/
        else
          echo "No bin directory found"
        fi
        echo ""
        if [ -d .buildozer ]; then
          echo "Buildozer directory contents:"
          find .buildozer -type f -name "*.log" | head -10
        else
          echo "No .buildozer directory found"
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: hashFiles('bin/*.apk') != ''
      with:
        name: shattered-worlds-apk
        path: bin/*.apk
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          build.log
          .buildozer/
        retention-days: 7
        
    - name: Create Release
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && hashFiles('bin/*.apk') != ''
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated build of Shattered Worlds Skirmish Game
          
          Changes in this release:
          - Built from commit: ${{ github.sha }}
          - Build number: ${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 